#def GET_STR_LEN 1
len_fetch:
    read_ind    in_1
    mul         byt_count
    add         %1 ;запись 4-х байного числа в переменную sym_count
    write       %1
    read        byt_count
    sub         total_b_co
    beq         choose_message
    read        byt_count
    mul         mult
    write       byt_count
    jump        len_fetch
#enddef


    .data
message:    .byte   'What is your name?'
mes_len:    .num    26
mes_addr:   .num    8
hello:      .byte   'Hello, '
hel_len:    .num    41; 7 for len + 34 for start ind
hel_addr:   .num    34


const_1:    .num    1
out_1:      .num    4
in_1:       .num    0 ;пусть передана паскаль строка

sym_count:  .num    0
mask:       .num    255
mult:       .num    256 ;константа для корректного парсинга чисел
byt_count:  .num    1
total_b_co: .num    16777216



    .text
_start:
    GET_STR_LEN sym_count

default_message:
    read_ind    mes_addr
    and         mask
    write_ind   out_1
    read        mes_addr
    add         const_1
    write       mes_addr
    sub         mes_len
    beq         end
    jump        default_message

choose_message:
    read        sym_count
    beq         default_message
hello_message:
    read_ind    hel_addr
    and         mask
    write_ind   out_1
    read        hel_addr
    add         const_1
    write       hel_addr
    sub         hel_len
    beq         write_name
    jump        hello_message
write_name:
    read_ind    in_1
    write_ind   out_1
    read        sym_count
    sub         const_1
    beq         end ;проверка на конец
    write       sym_count
    jump        write_name
end:
    halt
